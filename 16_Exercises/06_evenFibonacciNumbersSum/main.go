package main

import "fmt"

func main() {
	// get a term from the Fibonacci sequence
	// check if it is less than or equal to four million
	// check it it's even
	// if it's even add it to the sum
	// print the sum
	fmt.Println("The sum of the even Fibonacci numbers less than 4 million")
	fmt.Println("is:", sum())
}

func sum() int {
	x := 1 // first term in the Fibonacci sequence
	y := 2 // second term in the Fibonacci sequence
	var fibSum int

	for x <= 4000000 {
		if y%2 == 0 {
			fibSum = fibSum + y
		}
		y = x + y
		x = y - x
	}
	return fibSum
}

// Problem 2 from projecteuler.net
/*
Each new term in the Fibonacci sequence is generated by adding the previous
two terms. By startign with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed
four million, find the sum of the even-valued terms.fmt
*/
